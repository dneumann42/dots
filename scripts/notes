#!/usr/bin/env bash

# dependencies: dialog, git, fzf

NOTES_PATH="$HOME/Notes"
DAILY_FOLDER="daily"
DATE_FORMAT="+%Y-%m-%d"
COMMIT_MESSAGE="Note change sync"

mkdir -p "$NOTES_PATH"
mkdir -p "$NOTES_PATH/$DAILY_FOLDER"

new_note() {
  exec 3>&1; # redirect stream 3 to 1
  result=$(dialog \
    --begin 0 0 \
    --inputbox "Enter the name of the new note" \
    8 40 2>&1 1>&3);
  exitcode=$?;
  exec 3>&-;
  echo "$exitcode $result"
  [ "$exitcode" -eq 0 ] && create_new_note "$NOTES_PATH/$result.md" "$result"
}

create_new_note() {
  NAME=${2:-"Header"}
  printf "# $NAME\n\n## Sub heading\n" > "$1"
  $EDITOR "$1"
}

get_daily_note_name() {
  echo "$(date "$DATE_FORMAT")"
}

open_daily_note() {
  NOTE_NAME=$(get_daily_note_name)
  NOTE_PATH="$NOTES_PATH/$DAILY_FOLDER/$NOTE_NAME.md"
  if [ -f "$NOTE_PATH" ]; then
    $EDITOR "$NOTE_PATH" 
  else
    create_new_note "$NOTE_PATH" "$NOTE_NAME"
  fi
}

open_note() {
  exec 3>&1; # redirect stream 3 to 1
  result=$(
    dialog \
      --begin 0 0 \
      --title "Choose a note" \
      --fselect $NOTES_PATH/ 14 80 2>&1 1>&3
  );
  exitcode=$?;
  exec 3>&-;
  [ "$exitcode" -eq 0 ] && $EDITOR "$result"
}

quick_open_note() {
  pushd $NOTES_PATH > /dev/null
  note=$(fzf)
  $EDITOR "$NOTES_PATH/$note"
  popd > /dev/null
}

search_note() {
  pushd $NOTES_PATH > /dev/null
  OPTIONS=$(find . -name "*.md" -type f | sort)
  popd > /dev/null
  ITEM=$(printf '%s\n' "${OPTIONS[@]}" | fzf --height=50% --layout=reverse --border)
  [ "$?" -eq 0 ] && $EDITOR "$ITEM"
}

show_command_menu() {
  # get status of git
  sync=""
  pushd $NOTES_PATH > /dev/null
  if [ -z "$(git status --porcelain)" ]; then
    sync="synced"
  else
    sync="unsynced"
  fi
  popd > /dev/null

  exec 3>&1; # redirect stream 3 to 1
  result=$(
    dialog \
      --begin 0 0 \
      --menu "Choose an action ($sync)" -1 -1 -1 \
      "new" "New note" \
      "open" "Open note" \
      "daily" "Open daily note" \
      "status" "Git status for notes" \
      "sync" "Sync notes changes" \
      2>&1 1>&3
  );
  exitcode=$?;
  exec 3>&-;
  [ "$exitcode" -eq 0 ] && handle_argument "--$result" "return_to_menu"
}

git_status() {
  RETURN="$1"; shift
  pushd $NOTES_PATH > /dev/null
  STATUS=$(git status)
  popd > /dev/null

  dialog \
    --clear \
    --begin 0 0 \
    --title "Git status" \
    --extra-button "$@" \
    --extra-label "Sync" \
    --msgbox "$STATUS" -1 -1;

  [ $? -ne 0 ] && git_sync "$RETURN";
  [ "$RETURN" == "return_to_menu" ] && show_command_menu
}

git_sync() {
  pushd $NOTES_PATH > /dev/null
  git stash > /dev/null
  git pull
  git stash pop
  git add .
  git commit -m "$COMMIT_MESSAGE"
  git push
  popd > /dev/null
  [ "$1" == "return_to_menu" ] && show_command_menu
}

handle_argument() {
  CMD="$1"; shift
  case "$CMD" in
    "--new") new_note $@ ;;
    "--open") open_note $@ ;;
    "--search") search_note $@ ;;
    "--daily") open_daily_note $@ ;;
    "--status") git_status $@ ;;
    "--sync") git_sync $@ ;;
    "--quick-open") quick_open_note $@ ;;
    "cd") cd $NOTES_PATH ;;
    "ed") cd $NOTES_PATH && $EDITOR . ;;
    *) show_command_menu ;;
  esac
}

handle_argument $1
